
#include <stdio.h> // standard input and output library
#include <stdlib.h> // this includes functions regarding memory allocation
#include <string.h> // contains string functions
#include <errno.h> //It defines macros for reporting and retrieving error conditions through error codes
#include <time.h> //contains various functions for manipulating date and time
#include <unistd.h> //contains various constants
#include <sys/types.h> //contains a number of basic derived types that should be used whenever appropriate
#include <arpa/inet.h> // defines in_addr structure
#include <sys/socket.h> // for socket creation
#include <netinet/in.h> //contains constants and structures needed for internet domain addresses

int main()
{
    time_t clock;
    uint8_t scratchpad[9]; // Actually this is called packet in Network Communication, which contain data and send through.
    int server_socket = 0, clintConnt = 0;
    struct sockaddr_in server_address;
    server_socket = socket(AF_INET, SOCK_STREAM, 0); // creating socket
    memset(&server_address, '0', sizeof(server_address));
    memset(scratchpad, '0', sizeof(scratchpad));
    server_address.sin_family = AF_INET;
    server_address.sin_addr.s_addr = htonl(INADDR_ANY);
    server_address.sin_port = htons(2017);         // this is the port number of running server
    bind(server_socket, (struct sockaddr*)&server_address , sizeof(server_address));
    listen(server_socket , 20);

    while(1)
    {
        printf("\n\nHi,Iam running server.Some Client hit me\n"); // whenever a request from client came. It will be processed here.
        clintConnt = accept(server_socket, (struct sockaddr*)NULL, NULL);

        clock = time(NULL);

        close(clintConnt);
        sleep(1);
     }

     return 0;
}
